basePath: /api/github.com/fullstack-lang/laundromat/go/v1
consumes:
- application/json
definitions:
  DeletedAt:
    $ref: '#/definitions/NullTime'
  Duration:
    description: |-
      A Duration represents the elapsed time between two instants
      as an int64 nanosecond count. The representation limits the
      largest representable duration to approximately 290 years.
    format: int64
    type: integer
    x-go-package: time
  Machine:
    description: Machine is a sim agent
    properties:
      Cleanedlaundry:
        description: Cleanedlaundry indicate wether the laundry in the drum is wet (it has been cleand)
        type: boolean
      DrumLoad:
        description: DrumLoad in kg
        format: double
        type: number
      Name:
        description: Name is a mandatory field with metab
        type: string
      RemainingTime:
        $ref: '#/definitions/Duration'
      State:
        description: State of the machine
        enum:
        - MACHINE_DOOR_OPEN
        - MACHINE_DOOR_CLOSED_RUNNING
        - MACHINE_DOOR_CLOSED_IDLE
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/laundromat/go/models
  NullBool:
    description: |-
      NullBool implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Bool:
        type: boolean
      Valid:
        type: boolean
    title: NullBool represents a bool that may be null.
    type: object
    x-go-package: database/sql
  NullFloat64:
    description: |-
      NullFloat64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Float64:
        format: double
        type: number
      Valid:
        type: boolean
    title: NullFloat64 represents a float64 that may be null.
    type: object
    x-go-package: database/sql
  NullInt64:
    description: |-
      NullInt64 implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Int64:
        format: int64
        type: integer
      Valid:
        type: boolean
    title: NullInt64 represents an int64 that may be null.
    type: object
    x-go-package: database/sql
  NullString:
    description: |-
      var s NullString
      err := db.QueryRow("SELECT name FROM foo WHERE id=?", id).Scan(&s)
      ...
      if s.Valid {
      use s.String
      } else {
      NULL value
      }
    properties:
      String:
        type: string
      Valid:
        type: boolean
    title: |-
      NullString represents a string that may be null.
      NullString implements the Scanner interface so
      it can be used as a scan destination:
    type: object
    x-go-package: database/sql
  NullTime:
    description: |-
      NullTime implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Time:
        format: date-time
        type: string
      Valid:
        type: boolean
    title: NullTime represents a time.Time that may be null.
    type: object
    x-go-package: database/sql
  UmlState:
    description: UmlState mirrors joint.shapes.uml.UmlState
    properties:
      Name:
        type: string
      X:
        format: double
        type: number
      "Y":
        format: double
        type: number
    type: object
    x-go-package: github.com/fullstack-lang/gongdoc/go/models
  Umlsc:
    description: |-
      Umlsc diagram struct store a class diagram
      temporary here
    properties:
      Activestate:
        description: |-
          in this version, only one state is active mong the states
          (with the embedded states version, that might change)
        type: string
      Name:
        type: string
      States:
        description: |-
          this is the memory model (and not the "memory motel" of the Rolling Stones)
          it is not ignored by swagger because it is used by the angular model
        items:
          $ref: '#/definitions/UmlState'
        type: array
    type: object
    x-go-package: github.com/fullstack-lang/gongdoc/go/models
  Washer:
    description: Washer is a sim agent
    properties:
      CleanedLaundryWeight:
        description: |-
          CleanedLaundryWeight is the cumulative cleaned laundry
          the Washer. in kilo
        format: double
        type: number
      DirtyLaundryWeight:
        description: DirtyLaundryWeight is the weigh of the dirty laundry to clean
        format: double
        type: number
      Name:
        description: Name is a mandatory field with metab
        type: string
      State:
        description: State
        enum:
        - WASHER_IDLE
        - WASHER_LOAD_DRUM
        - WASHER_OPEN_DOOR
        - WASHER_WAIT_PROGRAM_END
        - WASHER_CLOSE_DOOR
        - WASHER_UNLOAD_DRUM
        - WASHER_START_PROGRAM
        type: string
      TechName:
        type: string
    type: object
    x-go-package: github.com/fullstack-lang/laundromat/go/models
  machineAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      Cleanedlaundry:
        description: Cleanedlaundry indicate wether the laundry in the drum is wet (it has been cleand)
        type: boolean
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      DrumLoad:
        description: DrumLoad in kg
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      Name:
        description: Name is a mandatory field with metab
        type: string
      RemainingTime:
        $ref: '#/definitions/Duration'
      State:
        description: State of the machine
        enum:
        - MACHINE_DOOR_OPEN
        - MACHINE_DOOR_CLOSED_RUNNING
        - MACHINE_DOOR_CLOSED_IDLE
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: MachineAPI is the input in POST API
    type: object
    x-go-name: MachineAPI
    x-go-package: github.com/fullstack-lang/laundromat/go/orm
  machineDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      Cleanedlaundry_Data:
        $ref: '#/definitions/NullBool'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      DrumLoad_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      Name_Data:
        $ref: '#/definitions/NullString'
      RemainingTime_Data:
        $ref: '#/definitions/NullInt64'
      State_Data:
        $ref: '#/definitions/NullString'
      TechName_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: MachineDB describes a machine in the database
    type: object
    x-go-name: MachineDB
    x-go-package: github.com/fullstack-lang/laundromat/go/orm
  simulationAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Etats_Machine:
        $ref: '#/definitions/Umlsc'
      Etats_Washer:
        $ref: '#/definitions/Umlsc'
      ID:
        format: uint64
        type: integer
      LastCommitNb:
        format: int64
        type: integer
      Machine:
        $ref: '#/definitions/Machine'
      MachineID:
        $ref: '#/definitions/NullInt64'
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
      Washer:
        $ref: '#/definitions/Washer'
      WasherID:
        $ref: '#/definitions/NullInt64'
    title: SimulationAPI is the input in POST API
    type: object
    x-go-name: SimulationAPI
    x-go-package: github.com/fullstack-lang/laundromat/go/orm
  simulationDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      LastCommitNb_Data:
        $ref: '#/definitions/NullInt64'
      MachineID:
        $ref: '#/definitions/NullInt64'
      Name_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
      WasherID:
        $ref: '#/definitions/NullInt64'
    title: SimulationDB describes a simulation in the database
    type: object
    x-go-name: SimulationDB
    x-go-package: github.com/fullstack-lang/laundromat/go/orm
  washerAPI:
    description: |-
      for POST, API, one needs the fields of the model as well as the fields
      from associations ("Has One" and "Has Many") that are generated to
      fullfill the ORM requirements for associations
    properties:
      CleanedLaundryWeight:
        description: |-
          CleanedLaundryWeight is the cumulative cleaned laundry
          the Washer. in kilo
        format: double
        type: number
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      DirtyLaundryWeight:
        description: DirtyLaundryWeight is the weigh of the dirty laundry to clean
        format: double
        type: number
      ID:
        format: uint64
        type: integer
      MachineID:
        $ref: '#/definitions/NullInt64'
      Name:
        description: Name is a mandatory field with metab
        type: string
      State:
        description: State
        enum:
        - WASHER_IDLE
        - WASHER_LOAD_DRUM
        - WASHER_OPEN_DOOR
        - WASHER_WAIT_PROGRAM_END
        - WASHER_CLOSE_DOOR
        - WASHER_UNLOAD_DRUM
        - WASHER_START_PROGRAM
        type: string
      TechName:
        type: string
      UpdatedAt:
        format: date-time
        type: string
    title: WasherAPI is the input in POST API
    type: object
    x-go-name: WasherAPI
    x-go-package: github.com/fullstack-lang/laundromat/go/orm
  washerDB:
    description: |-
      It incorporates the GORM ID, basic fields from the model (because they can be serialized),
      the encoded version of pointers
    properties:
      CleanedLaundryWeight_Data:
        $ref: '#/definitions/NullFloat64'
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      DirtyLaundryWeight_Data:
        $ref: '#/definitions/NullFloat64'
      ID:
        format: uint64
        type: integer
      MachineID:
        $ref: '#/definitions/NullInt64'
      Name_Data:
        $ref: '#/definitions/NullString'
      State_Data:
        $ref: '#/definitions/NullString'
      TechName_Data:
        $ref: '#/definitions/NullString'
      UpdatedAt:
        format: date-time
        type: string
    title: WasherDB describes a washer in the database
    type: object
    x-go-name: WasherDB
    x-go-package: github.com/fullstack-lang/laundromat/go/orm
host: localhost:8080
info:
  description: laundromat exposes types of a package.
  title: laundromat backend API
  version: "0.1"
paths:
  /commitnb:
    get:
      operationId: GetLastCommitNb
      tags:
      - backrepo
  /machines:
    get:
      description: Get all machines
      operationId: getMachines
      responses:
        "200":
          $ref: '#/responses/machineDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - machines
    post:
      consumes:
      - application/json
      description: Creates a machine
      operationId: postMachine
      parameters:
      - description: The Machine to submit or modify
        in: body
        name: Machine
        schema:
          $ref: '#/definitions/machineAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/machineDBResponse'
      tags:
      - machines
  /machines/{ID}:
    delete:
      description: Delete a machine
      operationId: deleteMachine
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - machines
    get:
      operationId: getMachine
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/machineDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a machine.
      tags:
      - machines
    patch:
      description: Update a machine
      operationId: updateMachine
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Machine to submit or modify
        in: body
        name: Machine
        schema:
          $ref: '#/definitions/machineAPI'
      responses:
        "200":
          $ref: '#/responses/machineDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - machines
  /pushfromfrontnb:
    get:
      operationId: GetLastPushFromFrontNb
      tags:
      - backrepo
  /simulations:
    get:
      description: Get all simulations
      operationId: getSimulations
      responses:
        "200":
          $ref: '#/responses/simulationDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - simulations
    post:
      consumes:
      - application/json
      description: Creates a simulation
      operationId: postSimulation
      parameters:
      - description: The Simulation to submit or modify
        in: body
        name: Simulation
        schema:
          $ref: '#/definitions/simulationAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/simulationDBResponse'
      tags:
      - simulations
  /simulations/{ID}:
    delete:
      description: Delete a simulation
      operationId: deleteSimulation
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - simulations
    get:
      operationId: getSimulation
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/simulationDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a simulation.
      tags:
      - simulations
    patch:
      description: Update a simulation
      operationId: updateSimulation
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Simulation to submit or modify
        in: body
        name: Simulation
        schema:
          $ref: '#/definitions/simulationAPI'
      responses:
        "200":
          $ref: '#/responses/simulationDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - simulations
  /washers:
    get:
      description: Get all washers
      operationId: getWashers
      responses:
        "200":
          $ref: '#/responses/washerDBsResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - washers
    post:
      consumes:
      - application/json
      description: Creates a washer
      operationId: postWasher
      parameters:
      - description: The Washer to submit or modify
        in: body
        name: Washer
        schema:
          $ref: '#/definitions/washerAPI'
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/washerDBResponse'
      tags:
      - washers
  /washers/{ID}:
    delete:
      description: Delete a washer
      operationId: deleteWasher
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        default:
          $ref: '#/responses/genericError'
      tags:
      - washers
    get:
      operationId: getWasher
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/washerDBResponse'
        default:
          $ref: '#/responses/genericError'
      summary: Gets the details for a washer.
      tags:
      - washers
    patch:
      description: Update a washer
      operationId: updateWasher
      parameters:
      - description: The ID of the order
        format: int64
        in: path
        name: ID
        required: true
        type: integer
      - description: The Washer to submit or modify
        in: body
        name: Washer
        schema:
          $ref: '#/definitions/washerAPI'
      responses:
        "200":
          $ref: '#/responses/washerDBResponse'
        default:
          $ref: '#/responses/genericError'
      tags:
      - washers
produces:
- application/json
responses:
  genericError:
    description: |-
      A GenericError is the default error message that is generated.
      For certain status codes there are more appropriate error structures.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        message:
          type: string
          x-go-name: Message
      type: object
  machineDBResponse:
    description: MachineDBResponse provides response
    headers:
      Cleanedlaundry_Data:
        description: |-
          Declation for basic field machineDB.Cleanedlaundry bool (to be completed)
          provide the sql storage for the boolan
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      DrumLoad_Data:
        description: Declation for basic field machineDB.DrumLoad {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      Name_Data:
        description: Declation for basic field machineDB.Name {{BasicKind}} (to be completed)
      RemainingTime_Data:
        description: Declation for basic field machineDB.RemainingTime {{BasicKind}} (to be completed)
      State_Data:
        description: Declation for basic field machineDB.State {{BasicKind}} (to be completed)
      TechName_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field machineDB.TechName {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullString'
  machineDBsResponse:
    description: MachineDBs arrays machineDBs
    schema:
      items:
        $ref: '#/definitions/machineDB'
      type: array
  simulationDBResponse:
    description: SimulationDBResponse provides response
    headers:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      ID:
        format: uint64
        type: integer
      LastCommitNb_Data:
        description: Declation for basic field simulationDB.LastCommitNb {{BasicKind}} (to be completed)
      MachineID:
        description: |-
          insertion for pointer fields encoding declaration
          field Machine is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
      Name_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field simulationDB.Name {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
      WasherID:
        description: |-
          field Washer is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
    schema:
      $ref: '#/definitions/NullInt64'
  simulationDBsResponse:
    description: SimulationDBs arrays simulationDBs
    schema:
      items:
        $ref: '#/definitions/simulationDB'
      type: array
  validationError:
    description: |-
      A ValidationError is an that is generated for validation failures.
      It has the same fields as a generic error but adds a Field property.
    schema:
      properties:
        code:
          format: int32
          type: integer
          x-go-name: Code
        field:
          type: string
          x-go-name: Field
        message:
          type: string
          x-go-name: Message
      type: object
  washerDBResponse:
    description: WasherDBResponse provides response
    headers:
      CleanedLaundryWeight_Data:
        description: Declation for basic field washerDB.CleanedLaundryWeight {{BasicKind}} (to be completed)
      CreatedAt:
        format: date-time
        type: string
      DeletedAt: {}
      DirtyLaundryWeight_Data:
        description: Declation for basic field washerDB.DirtyLaundryWeight {{BasicKind}} (to be completed)
      ID:
        format: uint64
        type: integer
      MachineID:
        description: |-
          insertion for pointer fields encoding declaration
          field Machine is a pointer to another Struct (optional or 0..1)
          This field is generated into another field to enable AS ONE association
      Name_Data:
        description: Declation for basic field washerDB.Name {{BasicKind}} (to be completed)
      State_Data:
        description: Declation for basic field washerDB.State {{BasicKind}} (to be completed)
      TechName_Data:
        description: |-
          insertion for basic fields declaration
          Declation for basic field washerDB.TechName {{BasicKind}} (to be completed)
      UpdatedAt:
        format: date-time
        type: string
    schema:
      $ref: '#/definitions/NullInt64'
  washerDBsResponse:
    description: WasherDBs arrays washerDBs
    schema:
      items:
        $ref: '#/definitions/washerDB'
      type: array
schemes:
- http
securityDefinitions:
  basic:
    type: basic
swagger: "2.0"
